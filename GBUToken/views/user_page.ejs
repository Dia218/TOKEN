<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <script src="/js/web3.min.js"></script>
    <title>GBU USER</title>

    <!-- Custom fonts for this template-->
    <link href="/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- Custom styles for this page -->
    <link href="/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="fas fa-laugh-wink"></i>
                </div>
                <div class="sidebar-brand-text mx-3">GBU User</div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-2">

            <!-- Heading -->
            <div class="sidebar-heading">
                MAIN
            </div>

            <!-- Nav Item - Dashboard -->
            <li class="nav-item active">
                <a class="nav-link">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>My Page</span></a>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider d-none d-md-block">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>

        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">

                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                        <li class="nav-item dropdown no-arrow d-sm-none">
                            <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-search fa-fw"></i>
                            </a>
                            <!-- Dropdown - Messages -->
                            <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                                aria-labelledby="searchDropdown">
                                <form class="form-inline mr-auto w-100 navbar-search">
                                    <div class="input-group">
                                        <input type="text" class="form-control bg-light border-0 small"
                                            placeholder="Search for..." aria-label="Search"
                                            aria-describedby="basic-addon2">
                                        <div class="input-group-append">
                                            <button class="btn btn-primary" type="button">
                                                <i class="fas fa-search fa-sm"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </li>

                        <div class="topbar-divider d-none d-sm-block"></div>

                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">KGU_USER</span>
                                <img class="img-profile rounded-circle"
                                    src="img/undraw_profile.svg">
                            </a>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">My Page</h1>
                    </div>

                    <div class="row">

                        <!-- Pending Requests Card Example -->
                        <div class="col-xl-12 col-md-6 mb-4">
                            <div class="card border-left-warning shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                                ID</div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                                <span id="my_id"> </span>
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                                My Address</div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800"><span class="showAccount"></span></div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-comments fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Earnings (Annual) Card Example -->
                        <div class="col-xl-6 col-md-6 mb-4">
                            <div class="card border-left-success shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                              My Balance</div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800"><span id="showBalance" class="showBalance"></span></div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    <div class="col-xl-6 col-md-6 mb-4">
                      <div class="card border-left-info shadow h-100 py-2">
                          <div class="card-body">
                              <div class="row no-gutters align-items-center">
                                  <div class="col mr-2">
                                      <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                        My Incentive </div>
                                      <div class="row no-gutters align-items-center">
                                          <div class="col-auto">
                                              <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800"><span class="showIncentive"></span></div>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="col-auto">
                                      <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>


                    <div class="row">
                        <!-- Grow In Utility -->
                        <div class="col-lg-6 py-3">
                          <div class="card position-relative">
                              <div class="card-header py-3">
                                  <h6 class="m-0 font-weight-bold text-primary">Approve</h6>
                              </div>
                              <div class="card-body">
                                <p>Need to Approve 'above' Incentive you're trying to send.</p>
                                  <input id="AAmount" type="text" class="form-control bg-light border-0 small col-lg-5 mb-2 col-xl-10" placeholder="Amount to Approve (ex : 100)">
                                  <a id="Approve" class="btn btn-primary btn-icon-split">
                                      <span class="icon text-white-50">
                                          <i class="fas fa-check"></i>
                                      </span>
                                      <span class="text">Approve Setting(*Need some gas)</span>
                                  </a><span id="refreshApprove"></span> <!--클릭 시 새로고침 필요성 강조-->
                              </div>
                          </div>
                        </div>


                        <div class="col-lg-6 py-3">

                          <div class="card position-relative">
                              <div class="card-header py-3">
                                  <h6 class="m-0 font-weight-bold text-primary">=> Now My Approve's Amount</h6>
                              </div>
                              <div class="card-body">
                                  <div class="showApprove"></div>
                                  <h6 class="m-0 text-primary"><br>*All incentive transfer deduct allowance</h6>
                              </div>
                          </div>
                        </div>
                      </div>

                    <div class="row">

                        <!-- Grow In Utility -->
                        <div class="col-lg-6">

                            <div class="card position-relative">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Send Ether</h6>
                                </div>
                                <div class="card-body">
                                    <p>Enter Receiver Address and Ether to Send.</p>
                                    <input id="TTo" type="text" class="form-control bg-light border-0 small col-lg-5 mb-2 col-xl-10" placeholder="Receiver's Address (ex : 0x1234)">
                                    <input id="TAmount" type="text" class="form-control bg-light border-0 small col-lg-5 mb-2 col-xl-10" placeholder="Ether to Send (ex : 100)">
                                    <a id="Transfer" class="btn btn-primary btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-check"></i>
                                        </span>
                                        <span class="text">Send Ether(*Need some gas)</span>
                                    </a><span id="refreshEther"></span> <!--클릭 시 새로고침 필요성 강조-->
                                </div>
                            </div>

                        </div>

                        <!-- Fade In Utility -->
                        <div class="col-lg-6">

                            <div class="card position-relative">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Send Incentive to other</h6>
                                </div>
                                <div class="card-body">
                                    <p>Enter Receiver Address and Incentive to Send.</p>
                                    <input id="ITo" type="text" class="form-control bg-light border-0 small col-lg-5 mb-2 col-xl-10" placeholder="Receiver Address (ex : 0x1234)">
                                    <input id="lAmount" type="text" class="form-control bg-light border-0 small col-lg-5 mb-2 col-xl-10" placeholder="Incentive to Send (ex : 100)">
                                    <a id="Incentive" class="btn btn-primary btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-check"></i>
                                        </span>
                                        <span class="text">Send Incentive(*Need some gas)</span>
                                    </a><span id="refreshIncentive"></span> <!--클릭 시 새로고침 필요성 강조-->
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.container-fluid -->

            </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->
            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; 경기체인 2022</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->
    <% for(var i=0; i < data.length; i++){%>
        <div class="tmp_id" style="display:none;">
            <%=data[i].account%>_<%=data[i].id%>
        </div>
    <% } %>
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>
   
    <!-- Bootstrap core JavaScript-->
    <script src="/vendor/jquery/jquery.min.js"></script>
    <script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="/vendor/jquery-easing/jquery.easing.min.js"></script>
    <!-- Custom scripts for all pages-->
    <script src="/js/sb-admin-2.min.js"></script>
    <!-- Page level plugins -->
    <script src="/vendor/chart.js/Chart.min.js"></script>
    <script src="/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="/vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <!-- Page level custom scripts -->
    <script src="/js/demo/chart-area-demo.js"></script>
    <script src="/js/demo/chart-pie-demo.js"></script>
    <script src="/js/demo/datatables-demo.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script>
        $( document ).ready(function() {
            console.log( "ready!" );
        
        if (typeof window.ethereum !== 'undefined') {
            web3 = new Web3(web3.currentProvider);
        }
        else{
            web3 = ethereum.request({ method: 'eth_requestAccounts' });
        }

        const showAccount = document.querySelector('.showAccount');
        const showBalance = document.querySelector('.showBalance');
        const showIncentive = document.querySelector('.showIncentive');
        const showAllowance = document.querySelector('.showApprove');
        var GBUToken = "0x6b7Ae8C7d766C9aF2D313ec2Bd57c7B54D028db9";
        var GBUTManager = "0xc3EdBE23381043f4623F4A450ED82CD9314bEea0";
        var GBUTokenAbi = [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "isTakeBack",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_limitValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approveToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "myToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_token",
          "type": "uint256"
        }
      ],
      "name": "takeBackToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }];
        var GBUTManagerAbi = [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_GBUToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_incentivelimit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "isPutIncentive",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gbuToken",
      "outputs": [
        {
          "internalType": "contract StandardToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_incentive",
          "type": "uint256"
        }
      ],
      "name": "putIncentive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_incentive",
          "type": "uint256"
        }
      ],
      "name": "sendIncentive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "viewBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }];  
                 
        var TokenContract=new web3.eth.Contract(GBUTokenAbi, GBUToken);
        var ManagerContract=new web3.eth.Contract(GBUTManagerAbi, GBUTManager);

        //본인의 메타마스크 지갑의 주소를 반환
        async function getAccount() {
            const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
            const account = accounts[0];
            showAccount.innerHTML = account;
            return account;
        }
        //이더 가져오는 함수
        async function getBalance(){
            const account = await getAccount();
            const balance = web3.eth.getBalance(account).then(function(result){
                showBalance.innerHTML = web3.utils.fromWei(result, 'ether');
            });
            return balance;
        }
        //자신의 인센티브량 가져오는 함수
        async function getIncentive(){
          const account = await getAccount();
          var bal;
          try{
            bal = await TokenContract.methods.myToken(account).call();
            showIncentive.innerHTML = bal;
            }catch(err) {
                alert(err); // TypeError: failed to fetch
            }
          return bal;
        }
        //자신의 GBUTManager에의 전송 허용량 가져오는 함수
        async function getAllowance(){
          const account = await getAccount();
          var a;
          try{
            a = await TokenContract.methods.allowance(account, GBUTManager).call();
            showAllowance.innerHTML = a;
          }catch(err) {
            alert(err); // TypeError: failed to fetch
          }
        }
        //approve 기능 가져오기
        async function approveTokens(_receiver, _limitValue, _value){
          var address = await getAccount();
          if (address == "") {
            alert("please input right address");
            return;
          }
          //call은 read만 하는 function인 경우, send는 tx를 만들어야 하는 function의 경우 사용
          await TokenContract.methods.approveToken(_receiver, _limitValue, _value).send({from: address}); 
        }
        //TokenManager를 통한 토큰 전송 허용량 설정
        $('#Approve').click(function() {
            var approveAmount = $('#AAmount').val();
            if(approveAmount == ""){
              alert("please input Amount");
              return;
            }
            approveTokens(GBUTManager, 100000, approveAmount);  //10만정도로 일단 최대 제한량 둠
            refreshApprove.innerHTML = "  Please Refresh Now";
        });

        //이더 전송 함수
        async function transact() {
            var _from = await getAccount();
            if (_from == "") {
                    alert("please input right sender address");
                    return;
            }
            var _to = $('#TTo').val();
            if (_to == "") {
                    alert("please input right receiver address");
                    return;
            }
            var _Amount = $('#TAmount').val();
            var txnObject = {   //보내지는 트랜잭션 블록
                "from":_from,
                "to": _to,
                "value": web3.utils.toWei(_Amount,'ether'),
                // "gas": 21000,         (optional)
                // "gasPrice": 4500000,  (optional)
                // "data": 'For testing' (optional)
                // "nonce": 10           (optional)
            }    
            web3.eth.sendTransaction(txnObject, function(error, result){
                if(error){
                    console.log( "Transaction error" ,error);
                }
                else{
                    var txn_hash = result; //Get transaction hash
                    console.log(result);
                    refreshEther.innerHTML = "  Please Refresh Now";  //전송 완료시 새로고침 필요
                }
            });
        }
        $('#Transfer').click(function() {
            transact();
        });

        //사용자간의 인센티브 토큰 전송 기능
        async function sendIncentive(){
            var _from = await getAccount();
            var _to = $('#ITo').val();
            if (_from == "" || _to == "") {
                    alert("please input right receiver address");
                    return;
            }
            var _incentive = $('#lAmount').val();
            await ManagerContract.methods.sendIncentive(_from, _to, _incentive).send({from: _from});
            refreshIncentive.innerHTML = "  Please Refresh Now";  //전송 완료시 새로고침 필요
        }

        //사용자간 인센티브 전송 버튼을 클릭했을 때
        $('#Incentive').click(function() {
          sendIncentive();
        });        
        getAccount();
        getBalance();
        getIncentive();
        getAllowance();

            async function findId(){
                var account = await getAccount();
                var data = document.querySelectorAll(".tmp_id");
                for (var i = 0; i < data.length; i++) { 
                    var div = data[i].innerHTML.trim();
                    if(div.toLowerCase().search(account)>=0){
                        document.getElementById("my_id").innerHTML = div.split("_")[1];
                    }
                }
            }
            findId();
        });
    </script>
    
</body>

</html>